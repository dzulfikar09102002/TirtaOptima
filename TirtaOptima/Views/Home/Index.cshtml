@model HomeViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<div class="row g-lg-3">
    <div class="col-lg">
        <div class="card card-animate bg-success ">
            <div class="card-body text-start p-3">
                <p class="text-uppercase fw-medium text-light mb-0 fs-6">Total Pelanggan Aktif</p>
                <div class="d-flex justify-content-between align-items-end">
                    <div class="border border-light border-3 border-opacity-75 rounded py-2 px-3 mt-3">
                        <i class="ri-team-line fs-1 text-white"></i>
                    </div>
                    <div class="text-center">
                        <h3 class="counter-value fs-1 text-white" data-target="@Model.CustomerCount"></h3>
                        <div>
                            <a href="@Url.Action("Index","Customers")" class="text-decoration-underline text-light col-3">View all</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg">
        <div class="card card-animate bg-warning">
            <div class="card-body text-start p-3">
                <p class="text-uppercase fw-medium text-light mb-0 fs-6">Total Pelanggan Menunggak</p>
                <div class="d-flex justify-content-between align-items-end">
                    <div class="border border-light border-3  border-opacity-75 rounded py-2 px-3 mt-3">
                        <i class="ri-draft-line fs-1 text-white"></i>
                    </div>
                    <div class="text-center">
                        <h3 class="counter-value fs-1 text-white" data-target="@Model.DebtCustomers"></h3>
                        <div>
                            <a href="@Url.Action("Index","DebtManagements")" class="text-decoration-underline text-light col-3">View all</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg">
        <div class="card card-animate bg-danger ">
            <div class="card-body text-start p-3">
                <p class="text-uppercase fw-medium text-light mb-0 fs-6">Total Piutang (IDR)</p>
                <div class="d-flex justify-content-between align-items-end">
                    <div class="border border-light border-3 border-opacity-75 rounded py-2 px-3 mt-3">
                        <i class="ri-coins-line fs-1 text-white"></i>
                    </div>
                    <div class="text-center">
                        <h3 class="counter-value fs-1 text-white" data-target="@Model.DebtSum"></h3>

                        <div>
                            <a href="@Url.Action("Index","DebtReports")" class="text-decoration-underline text-light col-3">View all</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg">
        <div class="card card-animate bg-info">
            <div class="card-body text-start p-3">
                <p class="text-uppercase fw-medium text-light mb-0 fs-6">Total Surat Diterbitkan</p>
                <div class="d-flex justify-content-between align-items-end">
                    <div class="border border-light border-3 border-opacity-75 rounded py-2 px-3 mt-3">
                        <i class="mdi mdi-email-multiple-outline fs-1 text-white"></i>
                    </div>
                    <div class="text-center">
                        <h3 class="counter-value fs-1 text-white me-2" data-target="@Model.LetterCount"></h3>
                        <div>
                            <a href="@Url.Action("Index","CollectionMonitorings")" class="text-decoration-underline text-light col-3">View all</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="card">
    <div class="card-body">
        <div>

            <h6 class="text-center mb-3 fw-bold">Data Piutang per Bulan Tahun 2024</h6>
            <canvas id="debtChart" height="120"></canvas>
        </div>
    </div>
</div>
<div class="row mt-4">
    <div class="col-lg-6">
        <div class="card">
            <div class="card-body">
                <h6 class="text-center mb-3 fw-bold">Trend Keberhasilan Penagihan (%)</h6>
                <canvas id="successChart" height="120"></canvas>
            </div>
        </div>
    </div>
    <div class="col-lg-6">
        <div class="card">
            <div class="card-body">
                <h6 class="text-center mb-3 fw-bold">Top 5 Pelanggan Menunggak Terbesar</h6>
                <canvas id="topDebtorChart" height="120"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var labels = JSON.parse('@Html.Raw(Json.Serialize(Model.DebtPerMonth.Select(p => new System.Globalization.DateTimeFormatInfo().GetMonthName(p.Month))))');
            var data = JSON.parse('@Html.Raw(Json.Serialize(Model.DebtPerMonth.Select(p => p.TotalNominal)))');
            if (labels.length > 0 && data.length > 0) {
                const ctx = document.getElementById('debtChart').getContext('2d');
                new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Nominal',
                            data: data,
                            fill: true,
                            borderColor: 'rgb(40, 167, 69)',
                            backgroundColor: 'rgba(40, 167, 69, 0.3)',
                            tension: 0.3,
                            pointRadius: 3
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: { display: false }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: { display: true, text: 'Nominal' }
                            },
                            x: {
                                title: { display: true, text: 'Bulan' }
                            }
                        }
                    }
                });
            }
            var successLabels = JSON.parse('@Html.Raw(Json.Serialize(Model.CollectionPerMonths.Select(p => new System.Globalization.DateTimeFormatInfo().GetMonthName(p.Month))))');
            var successData = JSON.parse('@Html.Raw(Json.Serialize(Model.CollectionPerMonths.Select(p => p.SuccessRatePerMonth)))');

            if (successLabels.length > 0) {
                const ctxSuccess = document.getElementById('successChart').getContext('2d');
                new Chart(ctxSuccess, {
                    type: 'bar',
                    data: {
                        labels: successLabels,
                        datasets: [{
                            label: '% berhasil penagihan',
                            data: successData,
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: { display: true, text: '%' }
                            }
                        }
                    }
                });
            }
            var debtorLabels = JSON.parse('@Html.Raw(Json.Serialize(Model.Debts.Select(p => p.Pelanggan.Nama)))'); 
            var debtorData = JSON.parse('@Html.Raw(Json.Serialize(Model.Debts.Select(p => p.Nominal)))');
            if (debtorLabels.length > 0) {

                // Tambahkan emoji medal ke label
                debtorLabels = debtorLabels.map((name, idx) => {
                    if (idx === 0) return '🥇 ' + name;
                    if (idx === 1) return '🥈 ' + name;
                    if (idx === 2) return '🥉 ' + name;
                    return name;
                });

                const ctxTopDebtor = document.getElementById('topDebtorChart').getContext('2d');
                new Chart(ctxTopDebtor, {
                    type: 'bar',
                    data: {
                        labels: debtorLabels,
                        datasets: [{
                            label: 'Tunggakan (Rp)',
                            data: debtorData,
                            backgroundColor: [
                                '#FFD700', // gold
                                '#C0C0C0', // silver
                                '#CD7F32', // bronze
                                'rgba(54, 162, 235, 0.6)',
                                'rgba(255, 99, 132, 0.6)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        indexAxis: 'y',
                        scales: {
                            x: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            }


        });
    </script>
}