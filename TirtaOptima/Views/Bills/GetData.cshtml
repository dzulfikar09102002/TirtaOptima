@model TirtaOptima.ViewModels.BillViewModel
@using System.Globalization
@using Newtonsoft.Json
<div class="card mt-2">
    <div class="card-body">
        <div class="d-flex flex-wrap gap-2 mb-3">
            @if (TempData["Source"]?.ToString() != "database")
            {
                <button type="button" class="btn btn-info btn-label waves-effect waves-light" onclick="window.location.reload()">
                    <i class="mdi mdi-arrow-u-left-top label-icon align-middle fs-16 me-2"></i> Kembali
                </button>
            }
            @{
                var isDatabase = TempData["Source"]?.ToString() == "database";
                int no = 1;
            }
            <button type="button"
                    id="btnAction"
                    class="btn btn-success btn-label waves-effect waves-light"
                    data-action="@(isDatabase ? "GetDataApi" : "Save")">
                <i class="mdi @(isDatabase ? "mdi-refresh" : "mdi-circle-edit-outline") label-icon align-middle fs-16 me-2"></i>
                @(isDatabase ? "Periksa Pembaruan" : "Catat Rekening")
            </button>
        </div>
        <table id="tbl" class="table table-hover table-striped align-middle table-bordered">
            <thead class="table-light">
                <tr>
                    <th class="text-center">
                        @if (isDatabase)
                        {
                            @:No.
                        }
                        else
                        {
                            <input class="form-check-input chk-all" type="checkbox" name="checkAll" value="option1" />
                        }
                    </th>
                    <th class="text-center">Id Pelanggan</th>
                    <th class="text-center">Nomor & Jenis</th>
                    <th class="text-center">Nama & Alamat</th>
                    <th class="text-center">Periode</th>
                    <th class="text-center">Pemakaian</th>
                    <th class="text-center">Nominal Air</th>
                    <th class="text-center">Nominal Non Air</th>
                    <th class="text-center">Total</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Bills)
                {
                    <tr class="odd">
                        <td class="text-center">
                            @if (isDatabase)
                            {
                                @no
                                ;
                            }
                            else
                            {
                                <input type="checkbox"
                                       name="SelectedBills"
                                       class="form-check-input chk-save"
                                       value="@JsonConvert.SerializeObject(item)">
                            }
                        </td>
                        <td class="text-center">
                            <b>@item.IdPelanggan</b>
                        </td>
                        <td class="text-center">
                            <span class="fw-bold">@(Model.Customers.FirstOrDefault(x => x.Id == item.IdPelanggan)?.Nomor ?? "-")</span> <br /> @Model.Customers.FirstOrDefault(x => x.Id == item.IdPelanggan)?.JenisNavigation?.Deskripsi
                        </td>
                        <td class="text-center">
                            <span class="fw-bold"> @Model.Customers.FirstOrDefault(x => x.Id == item.IdPelanggan)?.Nama</span> <br />
                            @Model.Customers.FirstOrDefault(x => x.Id == item.IdPelanggan)?.Alamat <br />
                            @Model.Customers.FirstOrDefault(x => x.Id == item.IdPelanggan)?.KelurahanNavigation?.Nama | @Model.Customers.FirstOrDefault(x => x.Id == item.IdPelanggan)?.KelurahanNavigation?.KodeKecNavigation?.Nama
                        </td>
                        @{
                            var bulan = new DateTime(item.Tahun.GetValueOrDefault(), item.Bulan.GetValueOrDefault(), 1)
                            .ToString("MMMM", new CultureInfo("id-ID"));
                            <td class="text-center">
                                @bulan | @item.Tahun
                            </td>
                        }
                        <td class="text-center">
                            @item.Pakai
                        </td>
                        <td class="text-center">
                            @(
                                item.Tagihan.HasValue && item.Tagihan != 0
                                ? "Rp " + item.Tagihan.Value.ToString("N0", new System.Globalization.CultureInfo("id-ID"))
                                : "-"
                                )
                        </td>
                        <td class="text-center">
                            @(
                                item.Total.HasValue && item.Tagihan.HasValue && (item.Total.Value - item.Tagihan.Value) >= 0
                                ? "Rp " + (item.Total.Value - item.Tagihan.Value).ToString("N0", new System.Globalization.CultureInfo("id-ID"))
                                : "-"
                                )
                        </td>
                        <td class="text-center fw-bold">
                            @(item.Total.HasValue
                                ? item.Total.Value.ToString("C", new System.Globalization.CultureInfo("id-ID")).Replace("Rp", "Rp ")
                                : "Rp 0")
                        </td>
                    </tr>
                    no++;
                }
            </tbody>
        </table>
    </div>
</div>
<div id="period-container"
     data-bulan="@Model.BulanSelect"
     data-tahun="@Model.TahunSelect">
    @{
        TempData["Bulan-bill"] = Model.BulanSelect;
        TempData["Tahun-bill"] = Model.TahunSelect;
        if (!string.IsNullOrEmpty(ViewBag.Message))
        {
            <div id="partial-message" data-message="@ViewBag.Message"></div>
        }
    }
</div>
<script>

    var selectedItems = [];
    $(document).ready(function () {
        $('#tbl').DataTable({
            ordering: false,
        })
        $("#btnAction").on("click", function () {
            var action = $(this).data("action");
            if (action === "GetDataApi") {
                GetDataApi();
            } else if (action === "Save") {
                Save();
            }
        });
        // Checkbox single
        $('#tbl').on('change', 'input[name="SelectedBills"]', function () {
            updateSelectedItems();
        });

        // Checkbox "Check All"
        $('.chk-all').on('click', function () {
            var isChecked = $(this).prop('checked');
            $('#tbl input[name="SelectedBills"]').prop('checked', isChecked);
            updateSelectedItems();
        });

        function updateSelectedItems() {
            selectedItems = [];
            $('#tbl input[name="SelectedBills"]:checked').each(function () {
                selectedItems.push($(this).val());
            });
        }
    });

    function GetDataApi() {
        var t = $("input[name='__RequestVerificationToken']").val();
        var bulan = $("#period-container").data("bulan");
        var tahun = $("#period-container").data("tahun");

        $.ajax({
            url: '@(Url.Action("GetDataApi", "Bills"))',
            type: "GET",
            data: { bulan, tahun },
            headers: {
                "RequestVerificationToken": t
            },
            beforeSend: function () {
                $("#loader").show();
                $('#data-customers').hide();
            },
            complete: function () {
                $("#loader").hide();
            },
            success: function (resp) {
                if (resp.status === undefined) {
                    $('#data-customers').show();
                    $('#data-customers').html(resp);
                    const msg = $('#data-customers').find('#partial-message').data('message');
                    if (msg) {
                        Swal.fire({
                            icon: 'success',
                            title: '<b>Success</b>',
                            text: msg,
                            showConfirmButton: false,
                            timer: 1000
                        });

                    } else {
                        Swal.fire({
                            icon: 'success',
                            title: '<b>Success</b>',
                            text: 'Data Berhasil Diambil',
                            showConfirmButton: false,
                            timer: 1000
                        });
                    }
                } else {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Peringatan',
                        text: resp.message ?? "Terjadi kesalahan",
                        confirmButtonText: 'OK'
                    });
                }
            }
        });
    }
    function Save() {
        if (selectedItems.length > 0) {
            Swal.fire({
                title: 'Apakah Anda yakin?',
                text: 'Anda akan mencatat rekening yang dipilih.',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Ya, Lanjutkan',
                cancelButtonText: 'Batal',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("Save", "Bills")',
                        data: { selectedbills: selectedItems },
                        traditional: true, // penting untuk kirim array ke controller
                        beforeSend: function () {
                            $("#loader").show();
                        },
                        complete: function () {
                            $("#loader").hide();
                        },
                        success: function (resp) {
                            if (resp.status == 1) {
                                Swal.fire({
                                    icon: 'success',
                                    title: '<b>Info</b>',
                                    text: resp.message,
                                    showConfirmButton: false,
                                    timer: 1000
                                }).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire({
                                    icon: 'warning',
                                    title: '<b style="color:orange">Peringatan</b>',
                                    text: resp.message,
                                });
                            }
                        },
                        error: function (xhr) {
                            $("#loader").hide();
                            alert(xhr.statusText, '', 'Information!', 1);
                        }
                    });
                }
            });
        } else {
            Swal.fire({
                icon: 'warning',
                text: 'Pilih Minimal 1 rekening',
            });
        }
    }
</script>
